<?php 

class Vendas_model extends CI_Model {


	public function salva($venda) {
	
		$this->db->insert("vendas_teste", $venda);
		$this->db->update("produto", array ("vendido" => 1),
		array("id" => $venda["produto_id"])
		); //O SEGUNDO ARRAY É O WHERE
	}
	
	
	public function salvaVendaBalcao($venda) {
	
		$idempresa = $this->session->userdata("idempresa");
		$usuarioVenda = $this->session->userdata("usuario_logado");
		
		$idusuario = $usuarioVenda["id"];
		$idvendaclienteAberta = $this->verificarVendaAbertaCliente($venda["idcliente"], $idempresa);
		
		$idvendaclienteAbertaSite = $idvendaclienteAberta["id"];
		
		//Verifica se há venda aberta para o cliente naquela empresa
		if ($idvendaclienteAbertaSite == null) {
			$vendaCliente = array("idcliente" => $venda["idcliente"], "idempresa" => $idempresa, 
			"idusuario" => $idusuario, "situacaovenda" => 2, "dtvenda" => date( 'Y-m-d H:i:s'));
		
			$this->db->insert("vendacliente", $vendaCliente);
		
			$idvendaclienteSite = $this->ultimaVendaClienteEmpresa($idempresa);
			$idvendacliente = $idvendaclienteSite["id"];
		} else {
			
			$idvendacliente = $idvendaclienteAbertaSite;
			
		}
		
			
		$venda = array("idcliente" => $venda["idcliente"], "idproduto" => $venda["idproduto"],
		"totalproduto" => $venda["totalproduto"], "idvenda_cliente_site" => $idvendacliente, "dtvenda" => date( 'Y-m-d H:i:s'),  
		"idusuario" => $idusuario );
		
		$this->db->insert("vendas", $venda);
		
	
	}
	
	/**
	 * Traz o último id da tabela venda cliente para a determinada empresa
	 * 
	 */
	public function ultimaVendaClienteEmpresa($idempresa) {
	
		$this->db->select("max(vendacliente.id) as id");
		$this->db->from("vendacliente");
		$this->db->where("vendacliente.idempresa", $idempresa);
		return $this->db->get()->row_array(0);
		
	}
	
	public function verificarVendaAbertaCliente($idcliente, $idempresa) {
	
			$this->db->select("vendacliente.id as id");
			$this->db->from("vendacliente");
			$this->db->where("vendacliente.idempresa", $idempresa);
			$this->db->where("vendacliente.idcliente", $idcliente);
			$this->db->where("vendacliente.situacaovenda", 1);
			return $this->db->get()->row_array(0);
	}
	
	public function vendasDia() {
	//ESTA FUNCIONANDO. COLOQUEI DE CLIENTE AQUI PARA VER O GRAFICO MAIS RAPIDO, DEPOIS TENHO QUE ALTERAR
		$this->db->select("vendacliente.dtvenda, vendas.idproduto,vendacliente.idcliente");
		$this->db->from("vendacliente");
		$this->db->join("vendas", "vendas.idvenda_cliente_site = vendacliente.id");
		
		return $this->db->get()->result_array();	

	}
	
	public function atualizaVenda($dados) {
		
		$this->db->where("vendacliente.id", $dados['idvendacliente']);
		$this->db->update("vendacliente", $dados);
	}
	
	public function vendasBalcao($tipoConsulta,$idempresa, $ordemconsulta, $primeiroid){
		mysql_query('SET CHARACTER SET utf8');
		
		//echo $ordemconsulta;
		
		if ($tipoConsulta == 'cozinha') {
			
			$grupo_produto = array(1);
				
			$situacaopedido = array(0,1,2);
				
		} else if ($tipoConsulta == 'entrega') {
			$grupo_produto = array(1,2);
			$situacaopedido = array(3);
				
		}else if ($tipoConsulta == 'bebida') {
			$grupo_produto = array(2);
				
			$situacaopedido = array(0,1,2);
				
		} else{
			
			$situacaopedido = array(1);
				
		}
		
		//$tipoVendas = array(1,2);
		$this->db->select("pessoa.nome, produto.nomeproduto,usuario.nome nomegarcom, vendas.totalproduto,vendas.idvenda as idvenda");
		$this->db->select("DATE_FORMAT(vendas.dtvenda, '%d-%m-%Y %H:%i:%s') as dtvenda", FALSE);
		$this->db->select("TIMESTAMP(vendas.dtvenda) as data", FALSE);
		$this->db->select("
case vendas.situacaopedido 
when 1 then 'Aguardando'
when 2 then 'Fazendo'
when 3 then 'Concluido'
when 4 then 'Entregue' 
when 0 then 'Aguardando' 
				
else 'INEXISTENTE' end  as situacaopedido", FALSE);
		$this->db->from("produto");
		$this->db->join("vendas", "vendas.idproduto = produto.id");
		$this->db->join("vendacliente", "vendacliente.id = vendas.idvenda_cliente_site");
		$this->db->join("pessoa", "pessoa.idpessoa = vendacliente.idcliente");
		$this->db->join("usuario", "vendacliente.idusuario = usuario.id");
		$this->db->join("categoria_produto", "categoria_produto.idcategoriaproduto = produto.categoria");
		$this->db->join("grupo_produto", "grupo_produto.codigogrupoproduto = categoria_produto.codigogrupoproduto");
		$this->db->where("produto.idempresa", $idempresa);
		
		if ($ordemconsulta == 'proximasconsultas') {
			
			$this->db->where("vendas.idvenda > ", $primeiroid);
		}
		
		$this->db->where_in("grupo_produto.codigogrupoproduto", $grupo_produto);
		
		$this->db->where_in("vendas.situacaopedido",$situacaopedido);
		$this->db->where("pessoa.idempresa", $idempresa);
		$this->db->where("vendacliente.idempresa", $idempresa);
		
		//$this->db->where("vendas.situacao", 1);
		//$this->db->where_in('vendacliente.situacaovenda', $tipoVendas);
	
		//$this->db->group_by("vendacliente.id");
	//	$this->db->order_by("situacaopedido", "ASC");
		
		$this->db->order_by("data", "ASC");
	
		//$this->db->order_by("vendacliente.situacaovenda");
	
		$dados = $this->db->get()->result_array();
		
		//echo "<pre>";
		//print_r($dados);
	
		//Se for utilizar data table, devo habilitar esse código que retorna o array como o datatable espera receber
		/*if ($ordemconsulta == 'proximasconsultas') {

			$ar = $dados; 
		
		} else {
				
			$ar = array("data" => $dados);
		
		}*/
		
		$ar = $dados; //UTILIZAR AS LINHAS ACIMA SE FOR UTILIZAR DATATABLE
		
		$nova = json_encode($ar, JSON_UNESCAPED_UNICODE);
		
		//print_r($nova);
		//die();
		return $nova;
	
	}
	
	public function atualizarPedido($tipo, $idvenda) {
		/*
		 * 22/07/2014
		 * FALTA VERIFICAR OS ATRIBUTOS DO BANCO */
		
		//situacaopedido == 1 - pedido feito
		//situacaopedido == 2 - pedido iniciado
		//situacaopedido == 3 - pedido foi finalizado
		//situacaopedido == 4 - pedido foi entregue
		
		if ($tipo == 'iniciado') {	
			$dadosSituacao = array("situacaopedido" => 2, "dt_inicio_pedido" => date( 'Y-m-d H:i:s '));
		
			
		} else if ($tipo == 'finalizado') {

			$dadosSituacao = array("situacaopedido" => 3, "dt_conclusao_pedido" => date( 'Y-m-d H:i:s '));
		}else if ($tipo == 'entregue') {

			$dadosSituacao = array("situacaopedido" => 4, "dt_entrega_pedido" => date( 'Y-m-d H:i:s '));
		}
		//situacaopedido
		$this->db->where("vendas.idvenda", $idvenda);
		$this->db->update("vendas", $dadosSituacao);
		
	}

	//TODO Se for conclusao, não pegar pelo último id, mas sim pela data hora do último pedido. 	
	public function trazUltimaVenda($tipoConsulta, $idempresa) {
		$situacaopedido = 0;
		
		if ($tipoConsulta == 'cozinha') {
				
			$grupo_produto = array(1);
		
			$situacaopedido = array(0,1,2);
		
		} else if ($tipoConsulta == 'entrega') {
			$grupo_produto = array(1,2);
			$situacaopedido = array(3);
		
		}else if ($tipoConsulta == 'bebida') {
			$grupo_produto = array(2);
		
			$situacaopedido = array(0,1,2);
		
		} else{
				
			$situacaopedido = array(1);
		
		}
		
		$this->db->select("max(vendas.idvenda) ultimavenda");		
		$this->db->from("produto");
		$this->db->join("vendas", "vendas.idproduto = produto.id");
		$this->db->join("vendacliente", "vendacliente.id = vendas.idvenda_cliente_site");
		$this->db->join("pessoa", "pessoa.idpessoa = vendacliente.idcliente");
		$this->db->join("usuario", "vendacliente.idusuario = usuario.id");
		$this->db->join("categoria_produto", "categoria_produto.idcategoriaproduto = produto.categoria");
		$this->db->join("grupo_produto", "grupo_produto.codigogrupoproduto = categoria_produto.codigogrupoproduto");
		$this->db->where("produto.idempresa", $idempresa);
		
		$this->db->where_in("grupo_produto.codigogrupoproduto", $grupo_produto);
		
		$this->db->where_in("vendas.situacaopedido",$situacaopedido);
		$this->db->where("pessoa.idempresa", $idempresa);
		$this->db->where("vendacliente.idempresa", $idempresa);
		
		
		$idVenda = $this->db->get()->row_array();
		//$dados = array("dados" => $idVenda);
		return $idVenda['ultimavenda'];
		//$dados_json = json_encode($idVenda, JSON_UNESCAPED_UNICODE);
		//return $dados_json; 
	}
	
	
	
}